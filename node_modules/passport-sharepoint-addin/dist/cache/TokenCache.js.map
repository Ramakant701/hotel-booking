{"version":3,"file":"TokenCache.js","sourceRoot":"","sources":["../../src/cache/TokenCache.ts"],"names":[],"mappings":";;AAGA;IAGW,MAAM,CAAC,KAAmB,EAAE,GAAW;QAC1C,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IACnC,CAAC;IAEM,MAAM,CAAC,GAAW;QACrB,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACzB,OAAO,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAClC,CAAC;IACL,CAAC;IAED,GAAG,CAAC,GAAW;QACX,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5E,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAClC,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACjB,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEM,kBAAkB,CAAC,KAAmB;QACzC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;IAC/D,CAAC;;AAvBc,iBAAM,GAAoC,EAAE,CAAC;AADhE,gCA0BC","sourcesContent":["import { ITokenCache } from './ITokenCache';\r\nimport { IAccessToken } from '../common/IAccessToken';\r\n\r\nexport class TokenCache implements ITokenCache {\r\n    private static tokens: { [key: string]: IAccessToken } = {};\r\n\r\n    public insert(token: IAccessToken, key: string): void {\r\n        TokenCache.tokens[key] = token;\r\n    }\r\n\r\n    public remove(key: string): void {\r\n        if (TokenCache.tokens[key]) {\r\n            delete TokenCache.tokens[key];\r\n        }\r\n    }\r\n\r\n    get(key: string): IAccessToken {\r\n        if (TokenCache.tokens[key] && this.isAccessTokenValid(TokenCache.tokens[key])) {\r\n            return TokenCache.tokens[key];\r\n        }\r\n\r\n        this.remove(key);\r\n        return null;\r\n    }\r\n\r\n    public isAccessTokenValid(token: IAccessToken): boolean {\r\n        return token && token.value && token.expireOn > new Date();\r\n    }\r\n\r\n}\r\n"]}