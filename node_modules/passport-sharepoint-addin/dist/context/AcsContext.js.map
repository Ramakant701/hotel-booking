{"version":3,"file":"AcsContext.js","sourceRoot":"","sources":["../../src/context/AcsContext.ts"],"names":[],"mappings":";;AAAA,2DAAwD;AAGxD,sDAAmD;AAInD,gBAAwB,SAAQ,qCAAiB;IAC7C,YAAY,QAAmB,EAAE,KAAmB;QAChD,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IAC3B,CAAC;IAES,qBAAqB,CAAC,GAAW;QACvC,MAAM,CAAC,yBAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC1E,CAAC;IAES,wBAAwB,CAAC,GAAW;QAC1C,MAAM,CAAC,yBAAW,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC7E,CAAC;CACJ;AAZD,gCAYC","sourcesContent":["import { SharePointContext } from './SharePointContext';\r\nimport { IAuthData } from '../strategy/IAuthData';\r\nimport { IAccessToken } from '../common/IAccessToken';\r\nimport { TokenHelper } from '../utils/TokenHelper';\r\nimport * as Promise from 'bluebird';\r\nimport { IOAuthConfig } from '../common/IOAuthConfig';\r\n\r\nexport class AcsContext extends SharePointContext {\r\n    constructor(authData: IAuthData, oauth: IOAuthConfig) {\r\n        super(authData, oauth);\r\n    }\r\n\r\n    protected createUserAccessToken(url: string): Promise<IAccessToken> {\r\n        return TokenHelper.getUserAccessToken(this.authData, this.oauth, url);\r\n    }\r\n\r\n    protected createAppOnlyAccessToken(url: string): Promise<IAccessToken> {\r\n        return TokenHelper.getAppOnlyAccessToken(this.authData, this.oauth, url);\r\n    }\r\n}\r\n"]}